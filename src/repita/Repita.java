package repita;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.MenuElement;
import javax.swing.TransferHandler;
import javax.swing.event.UndoableEditEvent;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicMenuBarUI;
import javax.swing.undo.CannotRedoException;
import javax.swing.undo.CannotUndoException;
import javax.swing.undo.UndoManager;
import componentes.ButtonTabComponent;
import japa.parser.JavaParser;
import japa.parser.ParseException;
import japa.parser.ast.CompilationUnit;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.ByteArrayInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.URL;
import java.util.Arrays;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.text.Caret;
import javax.tools.Diagnostic;
import javax.tools.DiagnosticCollector;
import javax.tools.JavaCompiler;
import javax.tools.JavaFileObject;
import javax.tools.StandardJavaFileManager;
import javax.tools.ToolProvider;

/**
 *
 * @author Hugo Carvalho
 */
public class Repita extends javax.swing.JFrame {

    /**
     * Creates new form Repita
     */
    public Repita() {
        this.setExtendedState(MAXIMIZED_BOTH);

        URL url = this.getClass().getResource("..//assets//logo-mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        setIconImage(imagemTitulo);

        initComponents();

        this.jPanelTerminal.setVisible(false);

        customizeMenuBar(jMenuBar);

        localizar = localizar.getInstancia();
        addListenersLocalizar();
        addListenersJTabbedPane();

        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                aprendizagem = new Aprendizagem(Repita.this);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanelBarraRapida = new javax.swing.JPanel();
        jSeparator6 = new javax.swing.JSeparator();
        jButtonAbrirProjeto = new javax.swing.JButton();
        jButtonNovoProjeto = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonDesfazer = new javax.swing.JButton();
        jButtonRefazer = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JSeparator();
        jButtonAprendizagem = new javax.swing.JButton();
        jButtonExecutar = new javax.swing.JButton();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanelTelaInicial = new javax.swing.JPanel();
        jPanelImage = new javax.swing.JPanel();
        jLabelLogo = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();
        jPanelTerminal = new javax.swing.JPanel();
        jScrollPaneTerminal = new javax.swing.JScrollPane();
        jTextPaneTerminal = new javax.swing.JTextPane();
        jButtonFecharTerminal = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuArquivo = new javax.swing.JMenu();
        jMenuItemNovoProjeto = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemAbrirProjeto = new javax.swing.JMenuItem();
        jMenuItemFecharProjeto = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItemSalvar = new javax.swing.JMenuItem();
        jMenuItemSalvarComo = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItemSair = new javax.swing.JMenuItem();
        jMenuEditar = new javax.swing.JMenu();
        jMenuItemDesfazer = new javax.swing.JMenuItem();
        jMenuItemRefazer = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItemRecortar = new javax.swing.JMenuItem();
        jMenuItemCopiar = new javax.swing.JMenuItem();
        jMenuItemColar = new javax.swing.JMenuItem();
        jMenuItemExcluir = new javax.swing.JMenuItem();
        jMenuItemSelecionarTudo = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItemLocalizar = new javax.swing.JMenuItem();
        jMenuItemSubstituir = new javax.swing.JMenuItem();
        jMenuExecutar = new javax.swing.JMenu();
        jMenuItemIniciarAprendizagem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuJanela = new javax.swing.JMenu();
        jCheckBoxMenuItemBarraRapida = new javax.swing.JCheckBoxMenuItem();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Repita RPA");
        setBackground(new java.awt.Color(40, 41, 35));

        jPanelBarraRapida.setBackground(new java.awt.Color(245, 245, 245));
        jPanelBarraRapida.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButtonAbrirProjeto.setBackground(new java.awt.Color(245, 245, 245));
        jButtonAbrirProjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/abrir.png"))); // NOI18N
        jButtonAbrirProjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAbrirProjetoActionPerformed(evt);
            }
        });

        jButtonNovoProjeto.setBackground(new java.awt.Color(245, 245, 245));
        jButtonNovoProjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/novo.png"))); // NOI18N
        jButtonNovoProjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoProjetoActionPerformed(evt);
            }
        });

        jButtonSalvar.setBackground(new java.awt.Color(245, 245, 245));
        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/salvar.png"))); // NOI18N
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonDesfazer.setBackground(new java.awt.Color(245, 245, 245));
        jButtonDesfazer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/desfazer.png"))); // NOI18N
        jButtonDesfazer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDesfazerActionPerformed(evt);
            }
        });

        jButtonRefazer.setBackground(new java.awt.Color(245, 245, 245));
        jButtonRefazer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/refazer.png"))); // NOI18N
        jButtonRefazer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefazerActionPerformed(evt);
            }
        });

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButtonAprendizagem.setBackground(new java.awt.Color(245, 245, 245));
        jButtonAprendizagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/aprendizagem.png"))); // NOI18N
        jButtonAprendizagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAprendizagemActionPerformed(evt);
            }
        });

        jButtonExecutar.setBackground(new java.awt.Color(245, 245, 245));
        jButtonExecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/executar.png"))); // NOI18N
        jButtonExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExecutarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBarraRapidaLayout = new javax.swing.GroupLayout(jPanelBarraRapida);
        jPanelBarraRapida.setLayout(jPanelBarraRapidaLayout);
        jPanelBarraRapidaLayout.setHorizontalGroup(
            jPanelBarraRapidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarraRapidaLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jButtonNovoProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAbrirProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDesfazer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRefazer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAprendizagem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBarraRapidaLayout.setVerticalGroup(
            jPanelBarraRapidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarraRapidaLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanelBarraRapidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonExecutar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAprendizagem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonRefazer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDesfazer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator6)
                    .addComponent(jButtonAbrirProjeto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonNovoProjeto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane.setBackground(new java.awt.Color(40, 41, 35));

        jPanelTelaInicial.setBackground(new java.awt.Color(40, 41, 35));
        jPanelTelaInicial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanelImage.setBackground(new java.awt.Color(40, 41, 35));

        jLabelLogo.setBackground(new java.awt.Color(40, 41, 35));
        jLabelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logo-mini.png"))); // NOI18N

        jLabelTitle.setBackground(new java.awt.Color(40, 41, 35));
        jLabelTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/title.PNG"))); // NOI18N

        javax.swing.GroupLayout jPanelImageLayout = new javax.swing.GroupLayout(jPanelImage);
        jPanelImage.setLayout(jPanelImageLayout);
        jPanelImageLayout.setHorizontalGroup(
            jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageLayout.createSequentialGroup()
                .addGroup(jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelImageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelLogo)))
                .addGap(0, 0, 0))
        );
        jPanelImageLayout.setVerticalGroup(
            jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelImageLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanelTelaInicialLayout = new javax.swing.GroupLayout(jPanelTelaInicial);
        jPanelTelaInicial.setLayout(jPanelTelaInicialLayout);
        jPanelTelaInicialLayout.setHorizontalGroup(
            jPanelTelaInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTelaInicialLayout.createSequentialGroup()
                .addContainerGap(500, Short.MAX_VALUE)
                .addComponent(jPanelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(500, 500, 500))
        );
        jPanelTelaInicialLayout.setVerticalGroup(
            jPanelTelaInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTelaInicialLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addComponent(jPanelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(120, 120, 120))
        );

        jTabbedPane.addTab("Início", null, jPanelTelaInicial, "Início");

        jPanelTerminal.setBackground(new java.awt.Color(40, 41, 35));

        jTextPaneTerminal.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        jScrollPaneTerminal.setViewportView(jTextPaneTerminal);

        jButtonFecharTerminal.setBackground(new java.awt.Color(245, 245, 245));
        jButtonFecharTerminal.setText("x");
        jButtonFecharTerminal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharTerminalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTerminalLayout = new javax.swing.GroupLayout(jPanelTerminal);
        jPanelTerminal.setLayout(jPanelTerminalLayout);
        jPanelTerminalLayout.setHorizontalGroup(
            jPanelTerminalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneTerminal)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTerminalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonFecharTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelTerminalLayout.setVerticalGroup(
            jPanelTerminalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTerminalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonFecharTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPaneTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenuBar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jMenuBar.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jMenuBar.setFocusCycleRoot(true);
        jMenuBar.setFocusTraversalPolicyProvider(true);
        jMenuBar.setPreferredSize(new java.awt.Dimension(108, 30));

        jMenuArquivo.setText("Arquivo");
        jMenuArquivo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jMenuItemNovoProjeto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNovoProjeto.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemNovoProjeto.setText("Novo Projeto");
        jMenuItemNovoProjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNovoProjetoActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemNovoProjeto);

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jMenuArquivo.add(jSeparator1);

        jMenuItemAbrirProjeto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemAbrirProjeto.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemAbrirProjeto.setText("Abrir Projeto");
        jMenuItemAbrirProjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirProjetoActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemAbrirProjeto);

        jMenuItemFecharProjeto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemFecharProjeto.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemFecharProjeto.setText("Fechar Projeto");
        jMenuItemFecharProjeto.setToolTipText("");
        jMenuItemFecharProjeto.setActionCommand("Fechar projeto");
        jMenuItemFecharProjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFecharProjetoActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemFecharProjeto);

        jSeparator2.setForeground(new java.awt.Color(204, 204, 204));
        jMenuArquivo.add(jSeparator2);

        jMenuItemSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSalvar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemSalvar.setText("Salvar");
        jMenuItemSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalvarActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemSalvar);

        jMenuItemSalvarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSalvarComo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemSalvarComo.setText("Slavar como...");
        jMenuItemSalvarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalvarComoActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemSalvarComo);

        jSeparator3.setForeground(new java.awt.Color(204, 204, 204));
        jMenuArquivo.add(jSeparator3);

        jMenuItemSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemSair.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemSair.setText("Sair");
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemSair);

        jMenuBar.add(jMenuArquivo);

        jMenuEditar.setText("Editar");
        jMenuEditar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jMenuItemDesfazer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemDesfazer.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemDesfazer.setText("Desfazer");
        jMenuItemDesfazer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDesfazerActionPerformed(evt);
            }
        });
        jMenuEditar.add(jMenuItemDesfazer);

        jMenuItemRefazer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemRefazer.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemRefazer.setText("Refazer");
        jMenuItemRefazer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRefazerActionPerformed(evt);
            }
        });
        jMenuEditar.add(jMenuItemRefazer);

        jSeparator4.setForeground(new java.awt.Color(204, 204, 204));
        jMenuEditar.add(jSeparator4);

        jMenuItemRecortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemRecortar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemRecortar.setText("Recortar");
        jMenuItemRecortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRecortarActionPerformed(evt);
            }
        });
        jMenuEditar.add(jMenuItemRecortar);

        jMenuItemCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemCopiar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemCopiar.setText("Copiar");
        jMenuItemCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCopiarActionPerformed(evt);
            }
        });
        jMenuEditar.add(jMenuItemCopiar);

        jMenuItemColar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemColar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemColar.setText("Colar");
        jMenuItemColar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemColarActionPerformed(evt);
            }
        });
        jMenuEditar.add(jMenuItemColar);

        jMenuItemExcluir.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemExcluir.setText("Excluir");
        jMenuItemExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExcluirActionPerformed(evt);
            }
        });
        jMenuEditar.add(jMenuItemExcluir);

        jMenuItemSelecionarTudo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSelecionarTudo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemSelecionarTudo.setText("Selecionar Tudo");
        jMenuItemSelecionarTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSelecionarTudoActionPerformed(evt);
            }
        });
        jMenuEditar.add(jMenuItemSelecionarTudo);

        jSeparator5.setForeground(new java.awt.Color(204, 204, 204));
        jMenuEditar.add(jSeparator5);

        jMenuItemLocalizar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemLocalizar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemLocalizar.setText("Localizar");
        jMenuItemLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLocalizarActionPerformed(evt);
            }
        });
        jMenuEditar.add(jMenuItemLocalizar);

        jMenuItemSubstituir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSubstituir.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemSubstituir.setText("Substituir");
        jMenuItemSubstituir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSubstituirActionPerformed(evt);
            }
        });
        jMenuEditar.add(jMenuItemSubstituir);

        jMenuBar.add(jMenuEditar);

        jMenuExecutar.setText("Executar");
        jMenuExecutar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jMenuItemIniciarAprendizagem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItemIniciarAprendizagem.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItemIniciarAprendizagem.setText("Iniciar Aprendizagem");
        jMenuItemIniciarAprendizagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemIniciarAprendizagemActionPerformed(evt);
            }
        });
        jMenuExecutar.add(jMenuItemIniciarAprendizagem);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItem1.setText("Executar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuExecutar.add(jMenuItem1);
        jMenuExecutar.add(jSeparator8);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItem2.setText("Gerar Classe");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuExecutar.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuItem3.setText("Formatar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenuExecutar.add(jMenuItem3);

        jMenuBar.add(jMenuExecutar);

        jMenuJanela.setText("Janela");
        jMenuJanela.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jCheckBoxMenuItemBarraRapida.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jCheckBoxMenuItemBarraRapida.setSelected(true);
        jCheckBoxMenuItemBarraRapida.setText("Exibir Barra de Opções Rapidas");
        jCheckBoxMenuItemBarraRapida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemBarraRapidaActionPerformed(evt);
            }
        });
        jMenuJanela.add(jCheckBoxMenuItemBarraRapida);

        jMenuBar.add(jMenuJanela);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBarraRapida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane)
            .addComponent(jPanelTerminal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelBarraRapida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane)
                .addGap(0, 0, 0)
                .addComponent(jPanelTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTabbedPane.getAccessibleContext().setAccessibleName("Início");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemNovoProjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNovoProjetoActionPerformed
        this.novo();
    }//GEN-LAST:event_jMenuItemNovoProjetoActionPerformed

    private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemSairActionPerformed

    private void jMenuItemColarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemColarActionPerformed
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            TransferHandler transferHandler = editorSelected.getjTextAreaScript().getTransferHandler();
            transferHandler.importData(editorSelected.getjTextAreaScript(), clipboard.getContents(null));
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemColarActionPerformed

    private void jMenuItemFecharProjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFecharProjetoActionPerformed
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            Object[] options = {"Confirmar", "Cancelar"};
            int opcao = JOptionPane.showOptionDialog(null, "Tem certeza que deseja fechar este porjeto? As ultimas alterações não serão salvas!",
                    "Encerrar projeto", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
            if (opcao == 0) {
                jTabbedPane.remove(i);
            }
        }
    }//GEN-LAST:event_jMenuItemFecharProjetoActionPerformed

    private void jMenuItemCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCopiarActionPerformed
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            TransferHandler transferHandler = editorSelected.getjTextAreaScript().getTransferHandler();
            transferHandler.exportToClipboard(editorSelected.getjTextAreaScript(), clipboard, TransferHandler.COPY);
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemCopiarActionPerformed

    private void jMenuItemRecortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRecortarActionPerformed
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            TransferHandler transferHandler = editorSelected.getjTextAreaScript().getTransferHandler();
            transferHandler.exportToClipboard(editorSelected.getjTextAreaScript(), clipboard, TransferHandler.COPY);
            editorSelected.getjTextAreaScript().replaceSelection("");
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemRecortarActionPerformed

    private void jMenuItemSelecionarTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSelecionarTudoActionPerformed
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            editorSelected.getjTextAreaScript().selectAll();
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemSelecionarTudoActionPerformed

    private void jMenuItemDesfazerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDesfazerActionPerformed
        this.desfazer();
    }//GEN-LAST:event_jMenuItemDesfazerActionPerformed

    private void jMenuItemRefazerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRefazerActionPerformed
        this.refazer();
    }//GEN-LAST:event_jMenuItemRefazerActionPerformed

    private void jMenuItemExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExcluirActionPerformed
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            editorSelected.getjTextAreaScript().replaceSelection("");
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemExcluirActionPerformed

    private void jMenuItemLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLocalizarActionPerformed
        localizar = localizar.getInstancia();
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            localizar.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemLocalizarActionPerformed

    private void jMenuItemAbrirProjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirProjetoActionPerformed
        this.abrir();
    }//GEN-LAST:event_jMenuItemAbrirProjetoActionPerformed

    private void jMenuItemSubstituirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSubstituirActionPerformed
        localizar = localizar.getInstancia();
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            localizar.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemSubstituirActionPerformed

    private void jMenuItemSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalvarActionPerformed
        this.salvar();
    }//GEN-LAST:event_jMenuItemSalvarActionPerformed

    private void jMenuItemSalvarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalvarComoActionPerformed
        localizar = localizar.getInstancia();
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            File arquivo;

            JFileChooser fc = new JFileChooser();
            fc.setDialogTitle("Salvar em...");
            fc.setDialogType(JFileChooser.OPEN_DIALOG);
            fc.setApproveButtonText("OK");
            //fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivo JAVA", "java", "java");
            fc.setFileFilter(filter);
            fc.setMultiSelectionEnabled(false);
            fc.setSelectedFile(new File(jTabbedPane.getTitleAt(jTabbedPane.getSelectedIndex())));
            int resultado = fc.showOpenDialog(fc);
            if (resultado == JFileChooser.CANCEL_OPTION) {
                return;
            }

            arquivo = new File(fc.getSelectedFile().getAbsolutePath() + ".java");
            editorSelected.setArquivo(arquivo);
            jTabbedPane.setTitleAt(jTabbedPane.getSelectedIndex(), arquivo.getName().replaceAll("\\..*", ""));

            FileWriter write;
            try {
                write = new FileWriter(arquivo);
                editorSelected.getjTextAreaScript().write(write);
            } catch (IOException ex) {
                Logger.getLogger(Repita.class.getName()).log(Level.SEVERE, null, ex);
            }

            jButtonSalvar.setEnabled(false);
            editorSelected.setSalvo(true);

        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemSalvarComoActionPerformed

    private void jButtonNovoProjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoProjetoActionPerformed
        this.novo();
    }//GEN-LAST:event_jButtonNovoProjetoActionPerformed

    private void jButtonAbrirProjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAbrirProjetoActionPerformed
        this.abrir();
    }//GEN-LAST:event_jButtonAbrirProjetoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        this.salvar();
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonDesfazerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDesfazerActionPerformed
        this.desfazer();
    }//GEN-LAST:event_jButtonDesfazerActionPerformed

    private void jButtonRefazerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefazerActionPerformed
        this.refazer();
    }//GEN-LAST:event_jButtonRefazerActionPerformed

    private void jCheckBoxMenuItemBarraRapidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemBarraRapidaActionPerformed
        jPanelBarraRapida.setEnabled(jCheckBoxMenuItemBarraRapida.isSelected());
        jPanelBarraRapida.setVisible(jCheckBoxMenuItemBarraRapida.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemBarraRapidaActionPerformed

    private void jButtonAprendizagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAprendizagemActionPerformed
        this.aprendizagem();
    }//GEN-LAST:event_jButtonAprendizagemActionPerformed

    private void jMenuItemIniciarAprendizagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemIniciarAprendizagemActionPerformed
        this.aprendizagem();
    }//GEN-LAST:event_jMenuItemIniciarAprendizagemActionPerformed

    private void jButtonExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExecutarActionPerformed
        this.executar();
    }//GEN-LAST:event_jButtonExecutarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.executar();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButtonFecharTerminalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharTerminalActionPerformed
        this.jPanelTerminal.setVisible(false);
        this.jTextPaneTerminal.setText("");
    }//GEN-LAST:event_jButtonFecharTerminalActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            if (!editor.getjTextAreaScript().getText().contains("public class")) {
                editor.getjTextAreaScript().setText("import java.awt.Robot;\n"
                        + "import java.awt.AWTException;\n"
                        + "import componentes.SendKeys;\n\n"
                        + "public class " + editor.getArquivo().getName().replaceAll("\\..*", "") + "{\n"
                        + "    public static void main(String[] args) {\n"
                        + "        Robot robot = null;\n"
                        + "        try{\n"
                        + "            robot = new Robot();\n"
                        + "        }catch(AWTException ex){\n"
                        + "            System.out.println(\"ex\");\n"
                        + "        }\n"
                        + "        " + editor.getjTextAreaScript().getText().replaceAll(" ", "").replaceAll("\n", "\n        ") + "\n"
                        + "   }\n"
                        + "}");
            } else {
                JOptionPane.showMessageDialog(null, "O arquivo ja contem class");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            int tamTextoAntes = editor.getjTextAreaScript().getText().length();
            int posCursor = editor.getjTextAreaScript().getCaretPosition();
            CompilationUnit format = null;
            try {
                format = JavaParser.parse(new ByteArrayInputStream(editor.getjTextAreaScript().getText().getBytes()));
            } catch (ParseException ex) {
                Logger.getLogger(Repita.class.getName()).log(Level.SEVERE, null, ex);
            }
            editor.getjTextAreaScript().setText(format.toString());
            editor.getjTextAreaScript().setCaretPosition(posCursor + ((tamTextoAntes - editor.getjTextAreaScript().getText().length() - 1)*-1));
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void novo() {
        editor = new Editor();
        addListenersEditor();
        undoManager = new UndoManager();
        editor.getjTextAreaScript().getDocument().addUndoableEditListener((UndoableEditEvent e) -> {
            undoManager.addEdit(e.getEdit());
        });
        String tituloProjeto;
        try {
            do {
                tituloProjeto = JOptionPane.showInputDialog(null, "Nome do projeto: ", "Novo projeto", JOptionPane.QUESTION_MESSAGE);
                if (tituloProjeto.equals("")) {
                    JOptionPane.showMessageDialog(this, "O projeto precisa de um nome!");
                } else {
                    jTabbedPane.addTab(tituloProjeto, null, editor, tituloProjeto);

                    jTabbedPane.setSelectedComponent(editor);
                    int i = jTabbedPane.getSelectedIndex();
                    jTabbedPane.setTabComponentAt(i, new ButtonTabComponent(jTabbedPane));
                }
            } while (tituloProjeto.equals(""));
        } catch (NullPointerException e) {
            System.out.println("Novo projeto cancelado");
        }
    }

    private void abrir() {
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Escolha o arquivo...");
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        fc.setApproveButtonText("OK");
        //fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivo JAVA", "java", ".java");
        fc.setFileFilter(filter);
        fc.setMultiSelectionEnabled(false);
        int resultado = fc.showOpenDialog(fc);
        if (resultado == JFileChooser.CANCEL_OPTION) {
            return;
        }

        File file = fc.getSelectedFile();
        try {
            editor = new Editor();
            addListenersEditor();
            editor.setArquivo(file);
            undoManager = new UndoManager();
            editor.getjTextAreaScript().getDocument().addUndoableEditListener((UndoableEditEvent e) -> {
                undoManager.addEdit(e.getEdit());
            });
            jTabbedPane.addTab(file.getName().replaceAll("\\..*", ""), null, editor, file.getName().replaceAll("\\..*", ""));
            jTabbedPane.setSelectedComponent(editor);
            int i = jTabbedPane.getSelectedIndex();
            jTabbedPane.setTabComponentAt(i, new ButtonTabComponent(jTabbedPane));

            FileReader reader = new FileReader(file);
            BufferedReader input = new BufferedReader(reader);
            String linha;
            while ((linha = input.readLine()) != null) {
                editor.getjTextAreaScript().setText(editor.getjTextAreaScript().getText() + linha + "\n");
            }
            input.close();

            if (editor.getjTextAreaScript().getText().contains("public class")) {
                editor.setClassInserido(true);
            }
        } catch (IOException ioe) {
            System.out.println(ioe);
        }
    }

    private void salvar() {
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            File arquivo = editorSelected.getArquivo();

            if (arquivo == null) {
                JFileChooser fc = new JFileChooser();
                fc.setDialogTitle("Salvar em...");
                fc.setDialogType(JFileChooser.OPEN_DIALOG);
                fc.setApproveButtonText("OK");
                //fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivo JAVA", "java", ".java");
                fc.setFileFilter(filter);
                fc.setMultiSelectionEnabled(false);
                fc.setSelectedFile(new File(jTabbedPane.getTitleAt(jTabbedPane.getSelectedIndex())));
                int resultado = fc.showOpenDialog(fc);
                if (resultado == JFileChooser.CANCEL_OPTION) {
                    return;
                }

                arquivo = new File(fc.getSelectedFile().getAbsolutePath() + ".java");
                editorSelected.setArquivo(arquivo);
                jTabbedPane.setTitleAt(jTabbedPane.getSelectedIndex(), arquivo.getName().replaceAll("\\..*", ""));
            }

            FileWriter write;
            try {
                write = new FileWriter(arquivo);
                editorSelected.getjTextAreaScript().write(write);
            } catch (IOException ex) {
                Logger.getLogger(Repita.class.getName()).log(Level.SEVERE, null, ex);
            }

            jButtonSalvar.setEnabled(false);
            editorSelected.setSalvo(true);

        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void desfazer() {
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            try {
                undoManager.undo();
            } catch (CannotUndoException cre) {
                System.out.println("undo manager limit");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void refazer() {
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            try {
                undoManager.redo();
            } catch (CannotRedoException cre) {
                System.out.println("redo manager limit");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void aprendizagem() {
        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            File arquivo = editorSelected.getArquivo();
            if (arquivo != null) {
                this.salvar();
                this.setVisible(false);
                aprendizagem.setVisible(true);
                aprendizagem.setEditor(editorSelected);
            } else {
                JOptionPane.showMessageDialog(null, "Por favor, salve o arquivo antes!");
                this.salvar();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void executar() {
        jButtonExecutar.setEnabled(false);
        this.jTextPaneTerminal.setText("");
        URL url = this.getClass().getResource("..//assets//logo-mini.png");
        JOptionPane opt = new JOptionPane("Carregando...", JOptionPane.INFORMATION_MESSAGE, JOptionPane.DEFAULT_OPTION, new ImageIcon(url), new Object[]{});
        final JDialog dlg = opt.createDialog("Carregando...");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        dlg.setIconImage(imagemTitulo);
        new Thread(new Runnable() {
            public void run() {
                try {
                    Thread.sleep(500);
                    dlg.dispose();

                } catch (Throwable th) {
                    System.out.println("error");
                }
            }
        }).start();
        dlg.setVisible(true);

        int i = jTabbedPane.getSelectedIndex();
        if (i > 0) {

            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            File arquivo = editorSelected.getArquivo();

            if (arquivo != null) {
                this.salvar();

                this.jPanelTerminal.setVisible(true);

                String saida = "";
                JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
                DiagnosticCollector<JavaFileObject> diagnosticsCollector = new DiagnosticCollector<JavaFileObject>();
                StandardJavaFileManager fileManager = compiler.getStandardFileManager(diagnosticsCollector, null, null);
                Iterable<? extends JavaFileObject> compilationUnits = fileManager.getJavaFileObjectsFromStrings(Arrays.asList(arquivo.getAbsolutePath()));
                JavaCompiler.CompilationTask task = compiler.getTask(null, fileManager, diagnosticsCollector, null, null, compilationUnits);
                boolean success = task.call();
                if (!success) {
                    List<Diagnostic<? extends JavaFileObject>> diagnostics = diagnosticsCollector.getDiagnostics();
                    for (Diagnostic<? extends JavaFileObject> diagnostic : diagnostics) {
                        // read error dertails from the diagnostic object
                        saida += diagnostic.getMessage(null) + "\n";
                    }
                }
                try {
                    fileManager.close();
                } catch (IOException ex) {
                    Logger.getLogger(Repita.class.getName()).log(Level.SEVERE, null, ex);
                }
                saida += "Success: " + success;

                Process pc = null;
                if (success) {
                    try {
                        File arq = new File(arquivo.getParent() + "\\execute.bat");
                        FileWriter arqW = new FileWriter(arq);
                        PrintWriter gravarArq = new PrintWriter(arqW);
                        gravarArq.printf("cd " + arquivo.getParent() + " & java " + arquivo.getName().replaceAll("\\.java", ""));
                        arqW.close();
                        pc = Runtime.getRuntime().exec(arquivo.getParent() + "\\execute.bat");
                        BufferedReader errinput = new BufferedReader(new InputStreamReader(pc.getErrorStream()));
                        String line = null;
                        saida = "";
                        while ((line = errinput.readLine()) != null) {
                            saida += line;
                        }
                        if (!saida.isEmpty()) {
                            this.jTextPaneTerminal.setText(saida);
                        } else {
                            this.jTextPaneTerminal.setText("CONSTRUÍDO COM SUCESSO!");
                        }
                        arq.delete();
                        new File(arquivo.getAbsolutePath().replaceAll(".java", ".class")).delete();
                    } catch (IOException ex) {
                        this.jTextPaneTerminal.setText("Error: " + ex);
                    }
                } else {
                    this.jTextPaneTerminal.setText(saida);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Por favor, salve o arquivo antes!");
                this.salvar();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum projeto foi aberto ou iniciado", "Sem projetos", JOptionPane.INFORMATION_MESSAGE);
        }
        jButtonExecutar.setEnabled(true);
    }

    private void customizeMenuBar(JMenuBar menuBar) {

        menuBar.setUI(new BasicMenuBarUI() {

            @Override
            public void paint(Graphics g, JComponent c) {
                g.setColor(Color.white);
                g.fillRect(0, 0, c.getWidth(), c.getHeight());
            }
        });

        MenuElement[] menus = menuBar.getSubElements();

        for (MenuElement menuElement : menus) {

            JMenu menu = (JMenu) menuElement.getComponent();
            changeComponentColors(menu);
            menu.setOpaque(true);

            MenuElement[] menuElements = menu.getSubElements();

            for (MenuElement popupMenuElement : menuElements) {

                JPopupMenu popupMenu = (JPopupMenu) popupMenuElement.getComponent();
                popupMenu.setBorder(null);

                MenuElement[] menuItens = popupMenuElement.getSubElements();

                for (MenuElement menuItemElement : menuItens) {

                    JMenuItem menuItem = (JMenuItem) menuItemElement.getComponent();
                    changeComponentColors(menuItem);
                    menuItem.setOpaque(true);

                }
            }
        }
    }

    private void addListenersLocalizar() {
        localizar.addActionListenerjButtonLocalizar((ActionEvent evt1) -> {
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            String searchstr = localizar.getLocalizarStr();
            if (searchstr == null) {
                return;
            }

            String aktStr = editorSelected.getjTextAreaScript().getText();
            if (!localizar.isDifMaiuscMinusc()) {
                searchstr = searchstr.toUpperCase();
                aktStr = aktStr.toUpperCase();
            }

            int index = aktStr.indexOf(searchstr);

            if (index == -1) {
                JOptionPane.showMessageDialog(null, "Texto não foi localizado!", "Localizar", JOptionPane.INFORMATION_MESSAGE);
            } else {
                editorSelected.getjTextAreaScript().select(index, index + searchstr.length());
            }
        });
        localizar.addActionListenerjButtonLocalizarProxima((ActionEvent evt1) -> {
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            String searchstr = localizar.getLocalizarStr();
            if (searchstr == null) {
                return;
            }

            String aktStr = editorSelected.getjTextAreaScript().getText();
            if (!localizar.isDifMaiuscMinusc()) {
                searchstr = searchstr.toUpperCase();
                aktStr = aktStr.toUpperCase();
            }

            int currentCaretPosition = editorSelected.getjTextAreaScript().getCaretPosition();

            if (currentCaretPosition < aktStr.length()) {
                int caracteresAnteriores = aktStr.substring(0, currentCaretPosition).length();
                aktStr = aktStr.substring(currentCaretPosition, aktStr.length());
                int index = aktStr.indexOf(searchstr);

                if (index == -1) {
                    JOptionPane.showMessageDialog(null, "Texto não foi localizado!", "Localizar proxima", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    editorSelected.getjTextAreaScript().select(caracteresAnteriores + index, (caracteresAnteriores + index) + searchstr.length());
                }
            }
        });
        localizar.addActionListenerjButtonSubstituir((ActionEvent evt1) -> {
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            String searchstr = localizar.getLocalizarStr();
            String subssearchstr = localizar.getSubstituirStr();
            if (searchstr == null) {
                return;
            }

            if (subssearchstr == null) {
                subssearchstr = "";
            }

            String aktStr = editorSelected.getjTextAreaScript().getText();
            if (!localizar.isDifMaiuscMinusc()) {
                searchstr = searchstr.toUpperCase();
                aktStr = aktStr.toUpperCase();
            }

            int index = aktStr.indexOf(searchstr);

            if (index == -1) {
                JOptionPane.showMessageDialog(null, "Texto não foi localizado!", "Substituir", JOptionPane.INFORMATION_MESSAGE);
            } else {
                editorSelected.getjTextAreaScript().select(index, index + searchstr.length());
                editorSelected.getjTextAreaScript().replaceSelection(localizar.getSubstituirStr());
                editorSelected.getjTextAreaScript().select(index, index + searchstr.length());
            }
        });
        localizar.addActionListenerjButtonSubstituirTodos((ActionEvent evt1) -> {
            Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
            String searchstr = localizar.getLocalizarStr();
            String subssearchstr = localizar.getSubstituirStr();
            if (searchstr == null) {
                return;
            }

            if (subssearchstr == null) {
                subssearchstr = "";
            }

            String aktStr = editorSelected.getjTextAreaScript().getText();
            if (!localizar.isDifMaiuscMinusc()) {
                searchstr = searchstr.toUpperCase();
                aktStr = aktStr.toUpperCase();
            }

            int index = aktStr.indexOf(searchstr);

            if (index == -1) {
                JOptionPane.showMessageDialog(null, "Texto não foi localizado!", "Substituir todos", JOptionPane.INFORMATION_MESSAGE);
            } else {
                aktStr = aktStr.replaceAll(searchstr, subssearchstr);
                editorSelected.getjTextAreaScript().setText(aktStr);
            }
        });
    }

    private void addListenersEditor() {
        editor.getjTextAreaScript().addKeyListener(new KeyListener() {
            @Override
            public void keyPressed(KeyEvent e) {
                jButtonSalvar.setEnabled(true);
                Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
                editorSelected.setSalvo(false);
            }

            @Override
            public void keyTyped(KeyEvent ke) {

            }

            @Override
            public void keyReleased(KeyEvent ke) {

            }
        });
    }

    private void addListenersJTabbedPane() {
        jTabbedPane.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                int i = jTabbedPane.getSelectedIndex();
                if (i > 0) {
                    Editor editorSelected = (Editor) jTabbedPane.getSelectedComponent();
                    if (editorSelected.isSalvo()) {
                        jButtonSalvar.setEnabled(false);
                    } else {
                        jButtonSalvar.setEnabled(true);
                    }
                }
            }
        });
    }

    private void changeComponentColors(Component comp) {
        comp.setBackground(Color.white);
        comp.setForeground(Color.black);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        Splash splash = new Splash();

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Repita.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Repita.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Repita.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Repita.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            splash.setVisible(true);
        });
        Repita repita = new Repita();
        splash.dispose();
        repita.setVisible(true);
    }

    // Variables declaration
    private Editor editor;
    private Localizar localizar;
    private UndoManager undoManager;
    private Aprendizagem aprendizagem;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAbrirProjeto;
    private javax.swing.JButton jButtonAprendizagem;
    private javax.swing.JButton jButtonDesfazer;
    private javax.swing.JButton jButtonExecutar;
    private javax.swing.JButton jButtonFecharTerminal;
    private javax.swing.JButton jButtonNovoProjeto;
    private javax.swing.JButton jButtonRefazer;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemBarraRapida;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JMenu jMenuArquivo;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuEditar;
    private javax.swing.JMenu jMenuExecutar;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItemAbrirProjeto;
    private javax.swing.JMenuItem jMenuItemColar;
    private javax.swing.JMenuItem jMenuItemCopiar;
    private javax.swing.JMenuItem jMenuItemDesfazer;
    private javax.swing.JMenuItem jMenuItemExcluir;
    private javax.swing.JMenuItem jMenuItemFecharProjeto;
    private javax.swing.JMenuItem jMenuItemIniciarAprendizagem;
    private javax.swing.JMenuItem jMenuItemLocalizar;
    private javax.swing.JMenuItem jMenuItemNovoProjeto;
    private javax.swing.JMenuItem jMenuItemRecortar;
    private javax.swing.JMenuItem jMenuItemRefazer;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JMenuItem jMenuItemSalvar;
    private javax.swing.JMenuItem jMenuItemSalvarComo;
    private javax.swing.JMenuItem jMenuItemSelecionarTudo;
    private javax.swing.JMenuItem jMenuItemSubstituir;
    private javax.swing.JMenu jMenuJanela;
    private javax.swing.JPanel jPanelBarraRapida;
    private javax.swing.JPanel jPanelImage;
    private javax.swing.JPanel jPanelTelaInicial;
    private javax.swing.JPanel jPanelTerminal;
    private javax.swing.JScrollPane jScrollPaneTerminal;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTextPane jTextPaneTerminal;
    // End of variables declaration//GEN-END:variables
}
